buildscript {
    ext {
        springBootVersion = '2.6.3'
        lombokVersion = '1.18.6'
        mapstructVersion = '1.4.2.Final'
        swaggerVersion = '2.9.2'
        jacksonVersion = '2.13.1'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
}

group = 'com.breeze'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    all*.exclude group:'org.springframework.boot', module:'spring-boot-starter-logging'
    compile.exclude module: "spring-boot-starter-json"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation 'com.querydsl:querydsl-jpa'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"

    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "com.auth0:java-jwt:3.18.3"
    implementation "org.springframework.security:spring-security-crypto:5.6.1"
    implementation "org.springframework.boot:spring-boot-starter-validation"

    implementation("org.springframework.boot:spring-boot-starter-log4j2")
    implementation("io.springfox:springfox-swagger2:${swaggerVersion}")
    implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"

    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"

    developmentOnly "org.springframework.boot:spring-boot-devtools"

    runtimeOnly "mysql:mysql-connector-java"

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
}

tasks.named('test') {
    useJUnitPlatform()
}

clean {
    delete file('src/main/generated') // 인텔리제이 Annotation processor 생성물 생성 위치
}

defaultTasks 'clean', 'build'
